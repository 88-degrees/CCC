apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

def getGitVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'origin/master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return 1
    }
}

android {
    compileSdkVersion 29
    defaultConfig {
        multiDexEnabled true
        applicationId "mustafaozhan.github.com.mycurrencies"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode getGitVersionCode()
        versionName "1.${getGitVersionCode()}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android {
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }
}
dependencies {
    Kotlin()
    Dagger()
    AndroidMaterial()
    RecyclerView()
    ConstraintLayout()
    JUnit()
    RxAndroid()
    RxJava()
    RxKotlin()
    LifeCycle()
    DataBinding()
    Fabric()
    OkHttp()
    GSon()
    Retrofit()
    MaterialSpinner()
    Room()
    Admob()
    FirebaseCore()
    FirebaseConfig()
    Crashlytics()
    Anko()
    MultiDex()
    Snacky()
    LoadingView()
    JodaTime()
    Lint()
    MXParser()
}
