apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply from: '../dependencies.gradle'

def getGitVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'origin/master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return 1
    }
}

android {
    compileSdkVersion 29
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    defaultConfig {
        multiDexEnabled true
        applicationId "mustafaozhan.github.com.mycurrencies"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode getGitVersionCode()
        versionName "1.${getGitVersionCode()}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android {
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }
}
dependencies {

    implementation(
            Kotlin,
            AndroidMaterial,
            RecyclerView,
            ConstraintLayout,
            Dagger,
            OkHttp,
            Moshi,
            MaterialSpinner,
            MultiDex,
            Room,
            Coroutines,
            Admob,
            FirebaseConfig,
            Crashlytics,
            Timber,
            ANRWatchDog,
            FirebaseCore,
            Anko,
            Snacky,
            Toasty,
            LoadingView,
            JodaTime,
            RxKotlin.values(),
            Retrofit.values(),
            LifeCycle.values()
    )

    api(RxApis.values())

    kapt(Annotations.values())

    testImplementation(JUnit)

    implementation(files(MXParser))
}
